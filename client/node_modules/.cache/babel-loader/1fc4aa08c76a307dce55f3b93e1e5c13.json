{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst GRAPH_TYPE = \"GRAPH\";\nimport { getToken } from \"./authApi\";\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://graph.microsoft.com/beta/\"\n  }),\n  prepareHeaders: (headers, _ref) => {\n    let {\n      getState\n    } = _ref;\n    const token = getState().auth.getToken();\n    console.log(token);\n\n    if (token) {\n      headers.set('authorization', `Bearer ${token}`);\n    }\n\n    return headers;\n  },\n  tagTypes: [GRAPH_TYPE],\n  endpoints: builder => ({\n    getUsers: builder.query({\n      query: () => 'users'\n    }),\n    getUser: builder.query({\n      query: id => `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, errir, id) => [{\n        type: GRAPH_TYPE,\n        id\n      }]\n    })\n  })\n});\nexport default graphApi;\nexport const {\n  useGetUserQuery,\n  useGetUsersQuery\n} = graphApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","GRAPH_TYPE","getToken","graphApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","getState","token","auth","console","log","set","tagTypes","endpoints","builder","getUsers","query","getUser","id","providesTags","result","errir","type","useGetUserQuery","useGetUsersQuery"],"sources":["/Users/shahartamari/code/ad-org-tree/client/src/services/graphApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst GRAPH_TYPE = \"GRAPH\";\nimport { getToken } from \"./authApi\";\n\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"https://graph.microsoft.com/beta/\" }),\n  prepareHeaders: (headers, {getState}) => {\n    const token = getState().auth.getToken();\n    console.log(token);\n    if (token) {\n      headers.set('authorization', `Bearer ${token}`)\n    }\n\n    return headers\n\n  },\n  tagTypes: [GRAPH_TYPE],\n  endpoints: (builder) => ({\n    getUsers: builder.query({\n      query: () => 'users'\n    }),\n    getUser: builder.query({\n      query: (id) =>\n        `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, errir, id) => [{ type: GRAPH_TYPE, id }],\n    }),\n  }),\n});\n\nexport default graphApi;\nexport const { useGetUserQuery, useGetUsersQuery } = graphApi;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AACA,MAAMC,UAAU,GAAG,OAAnB;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,MAAMC,QAAQ,GAAGJ,SAAS,CAAC;EACzBK,WAAW,EAAE,SADY;EAEzBC,SAAS,EAAEL,cAAc,CAAC;IAAEM,OAAO,EAAE;EAAX,CAAD,CAFA;EAGzBC,cAAc,EAAE,CAACC,OAAD,WAAyB;IAAA,IAAf;MAACC;IAAD,CAAe;IACvC,MAAMC,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBT,QAAhB,EAAd;IACAU,OAAO,CAACC,GAAR,CAAYH,KAAZ;;IACA,IAAIA,KAAJ,EAAW;MACTF,OAAO,CAACM,GAAR,CAAY,eAAZ,EAA8B,UAASJ,KAAM,EAA7C;IACD;;IAED,OAAOF,OAAP;EAED,CAZwB;EAazBO,QAAQ,EAAE,CAACd,UAAD,CAbe;EAczBe,SAAS,EAAGC,OAAD,KAAc;IACvBC,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;MACtBA,KAAK,EAAE,MAAM;IADS,CAAd,CADa;IAIvBC,OAAO,EAAEH,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAGE,EAAD,IACJ,SAAQA,EAAG,2DAFO;MAGrBC,YAAY,EAAE,CAACC,MAAD,EAASC,KAAT,EAAgBH,EAAhB,KAAuB,CAAC;QAAEI,IAAI,EAAExB,UAAR;QAAoBoB;MAApB,CAAD;IAHhB,CAAd;EAJc,CAAd;AAdc,CAAD,CAA1B;AA0BA,eAAelB,QAAf;AACA,OAAO,MAAM;EAAEuB,eAAF;EAAmBC;AAAnB,IAAwCxB,QAA9C"},"metadata":{},"sourceType":"module"}