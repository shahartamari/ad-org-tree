{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport authApi from \"./authApi\";\nconst GRAPH_TYPE = \"GRAPH\";\nconst baseQuery = fetchBaseQuery({\n  baseUrl: \"https://graph.microsoft.com/v1.0/users\"\n});\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const result = await baseQuery(args, api, extra);\n\n  if (result.error) {\n    const {\n      status,\n      code\n    } = result.error;\n\n    if (status == '401' || code === 'InvalidAuthenticationToken') {}\n  }\n};\n\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://graph.microsoft.com/beta\"\n  }),\n  tagTypes: [GRAPH_TYPE],\n  endpoints: builder => ({\n    getUsers: builder.query({\n      query: () => \"users\"\n    }),\n    getUser: builder.query({\n      query: id => `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, error, id) => [{\n        type: GRAPH_TYPE,\n        id\n      }]\n    })\n  })\n});\nexport default graphApi;\nexport const {\n  useGetUserQuery,\n  useGetUsersQuery\n} = graphApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","GRAPH_TYPE","baseQuery","baseUrl","baseQueryWithReauth","args","api","extra","result","error","status","code","graphApi","reducerPath","tagTypes","endpoints","builder","getUsers","query","getUser","id","providesTags","type","useGetUserQuery","useGetUsersQuery"],"sources":["/Users/shahartamari/code/ad-org-tree/client/src/services/graphApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport authApi from \"./authApi\";\n\nconst GRAPH_TYPE = \"GRAPH\";\nconst baseQuery = fetchBaseQuery({\n  baseUrl: \"https://graph.microsoft.com/v1.0/users\"});\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const result = await baseQuery(args, api, extra);\n  if (result.error) {\n    const {status, code} = result.error;\n    if (status == '401' || code === 'InvalidAuthenticationToken') {\n\n    }\n  }\n}\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({baseUrl: \"https://graph.microsoft.com/beta\"}),\n  tagTypes: [GRAPH_TYPE],\n  endpoints: (builder) => ({\n    \n    getUsers: builder.query({\n      query: () => \"users\",\n    }),\n    getUser: builder.query({\n      query: (id) =>\n        `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, error, id) => [{ type: GRAPH_TYPE, id }],\n    }),\n  }),\n});\n\nexport default graphApi;\nexport const { useGetUserQuery, useGetUsersQuery } = graphApi;\n\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,UAAU,GAAG,OAAnB;AACA,MAAMC,SAAS,GAAGH,cAAc,CAAC;EAC/BI,OAAO,EAAE;AADsB,CAAD,CAAhC;;AAGA,MAAMC,mBAAmB,GAAG,OAAOC,IAAP,EAAaC,GAAb,EAAkBC,KAAlB,KAA4B;EACtD,MAAMC,MAAM,GAAG,MAAMN,SAAS,CAACG,IAAD,EAAOC,GAAP,EAAYC,KAAZ,CAA9B;;EACA,IAAIC,MAAM,CAACC,KAAX,EAAkB;IAChB,MAAM;MAACC,MAAD;MAASC;IAAT,IAAiBH,MAAM,CAACC,KAA9B;;IACA,IAAIC,MAAM,IAAI,KAAV,IAAmBC,IAAI,KAAK,4BAAhC,EAA8D,CAE7D;EACF;AACF,CARD;;AASA,MAAMC,QAAQ,GAAGd,SAAS,CAAC;EACzBe,WAAW,EAAE,SADY;EAEzBX,SAAS,EAAEH,cAAc,CAAC;IAACI,OAAO,EAAE;EAAV,CAAD,CAFA;EAGzBW,QAAQ,EAAE,CAACb,UAAD,CAHe;EAIzBc,SAAS,EAAGC,OAAD,KAAc;IAEvBC,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;MACtBA,KAAK,EAAE,MAAM;IADS,CAAd,CAFa;IAKvBC,OAAO,EAAEH,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAGE,EAAD,IACJ,SAAQA,EAAG,2DAFO;MAGrBC,YAAY,EAAE,CAACb,MAAD,EAASC,KAAT,EAAgBW,EAAhB,KAAuB,CAAC;QAAEE,IAAI,EAAErB,UAAR;QAAoBmB;MAApB,CAAD;IAHhB,CAAd;EALc,CAAd;AAJc,CAAD,CAA1B;AAiBA,eAAeR,QAAf;AACA,OAAO,MAAM;EAAEW,eAAF;EAAmBC;AAAnB,IAAwCZ,QAA9C"},"metadata":{},"sourceType":"module"}