{"ast":null,"code":"import { fetchBaseQuery } from \"@reduxjs/toolkit/dist/query\";\nimport authApi from './authApi';\nconst url = \"https://graph.microsoft.com/v1.0/users\";\nconst baseQuery = fetchBaseQuery({\n  baseUrl: url\n});\n\nconst basewWithHeaders = token => fetchBaseQuery({\n  baseUrl: url,\n  prepareHeaders: (headers, getState) => {\n    headers.set('authorization', `bearer ${token}`);\n    return headers;\n  },\n  args,\n  api,\n  extra\n});\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const {\n    error\n  } = await baseQuery(args, api, extra);\n\n  if (error && error.status === 401) {\n    //const result = await fetch('http://localhost:5001');\n    const {\n      isSuccess,\n      data\n    } = await api.dispatch(authApi.endpoints.getToken.initiate());\n\n    if (isSuccess) {\n      const result = basewWithHeaders(data, args, api, extra)();\n      console.log(result);\n      return result;\n    }\n  }\n};\n\nexport default baseQueryWithReauth;","map":{"version":3,"names":["fetchBaseQuery","authApi","url","baseQuery","baseUrl","basewWithHeaders","token","prepareHeaders","headers","getState","set","args","api","extra","baseQueryWithReauth","error","status","isSuccess","data","dispatch","endpoints","getToken","initiate","result","console","log"],"sources":["/Users/shahartamari/code/ad-org-tree/client/src/services/fetchWithReauth.js"],"sourcesContent":["import { fetchBaseQuery } from \"@reduxjs/toolkit/dist/query\";\n\nimport authApi from './authApi'\nconst url = \"https://graph.microsoft.com/v1.0/users\"\nconst baseQuery = fetchBaseQuery({\n  baseUrl: url ,\n});\n\nconst basewWithHeaders =  (token)=> fetchBaseQuery({\n    baseUrl: url,\n    prepareHeaders: (headers, getState) => {\n        headers.set('authorization', `bearer ${token}`)\n        return headers;\n    },\n    args,\n    api,\n    extra \n})\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const {error} = await baseQuery(args, api, extra);\n  \n  if (error && error.status === 401) {\n    //const result = await fetch('http://localhost:5001');\n    const {isSuccess, data} = await api.dispatch(authApi.endpoints.getToken.initiate())\n \n    if (isSuccess) {\n        const result = basewWithHeaders(data, args, api, extra)();\n        console.log(result);\n        return result;\n    }\n   \n  }\n};\n\nexport default baseQueryWithReauth;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,6BAA/B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,MAAMC,GAAG,GAAG,wCAAZ;AACA,MAAMC,SAAS,GAAGH,cAAc,CAAC;EAC/BI,OAAO,EAAEF;AADsB,CAAD,CAAhC;;AAIA,MAAMG,gBAAgB,GAAKC,KAAD,IAAUN,cAAc,CAAC;EAC/CI,OAAO,EAAEF,GADsC;EAE/CK,cAAc,EAAE,CAACC,OAAD,EAAUC,QAAV,KAAuB;IACnCD,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA8B,UAASJ,KAAM,EAA7C;IACA,OAAOE,OAAP;EACH,CAL8C;EAM/CG,IAN+C;EAO/CC,GAP+C;EAQ/CC;AAR+C,CAAD,CAAlD;;AAWA,MAAMC,mBAAmB,GAAG,OAAOH,IAAP,EAAaC,GAAb,EAAkBC,KAAlB,KAA4B;EACtD,MAAM;IAACE;EAAD,IAAU,MAAMZ,SAAS,CAACQ,IAAD,EAAOC,GAAP,EAAYC,KAAZ,CAA/B;;EAEA,IAAIE,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,GAA9B,EAAmC;IACjC;IACA,MAAM;MAACC,SAAD;MAAYC;IAAZ,IAAoB,MAAMN,GAAG,CAACO,QAAJ,CAAalB,OAAO,CAACmB,SAAR,CAAkBC,QAAlB,CAA2BC,QAA3B,EAAb,CAAhC;;IAEA,IAAIL,SAAJ,EAAe;MACX,MAAMM,MAAM,GAAGlB,gBAAgB,CAACa,IAAD,EAAOP,IAAP,EAAaC,GAAb,EAAkBC,KAAlB,CAAhB,EAAf;MACAW,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,OAAOA,MAAP;IACH;EAEF;AACF,CAdD;;AAgBA,eAAeT,mBAAf"},"metadata":{},"sourceType":"module"}