{"ast":null,"code":"import { fetchBaseQuery } from \"@reduxjs/toolkit/dist/query\";\nimport { getToken } from \"./authApi\";\nconst url = `https://${process.env.REACT_APP_GRAPH_ENDPOINT}/${process.env.REACT_APP_GRAPH_VERSION}/`;\n\nconst baseQuery = token => fetchBaseQuery({\n  baseUrl: url,\n  prepareHeaders: headers => {\n    headers.set(\"authorization\", `bearer ${token}`);\n    return headers;\n  }\n});\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const result = getToken.select()(a);\n  const token = null;\n  console.log(token);\n  const {\n    data,\n    error\n  } = await baseQuery(token)(args, api, extra);\n\n  if (error && error.status === 401) {\n    const {\n      isSuccess,\n      data\n    } = await api.dispatch(getToken.initiate());\n\n    if (isSuccess) {\n      const result = await baseQuery(data)(args, api, extra);\n      return result;\n    }\n  } else {\n    return data;\n  }\n};\n\nexport default baseQueryWithReauth;","map":{"version":3,"names":["fetchBaseQuery","getToken","url","process","env","REACT_APP_GRAPH_ENDPOINT","REACT_APP_GRAPH_VERSION","baseQuery","token","baseUrl","prepareHeaders","headers","set","baseQueryWithReauth","args","api","extra","result","select","a","console","log","data","error","status","isSuccess","dispatch","initiate"],"sources":["/Users/shahartamari/code/ad-org-tree/client/src/services/fetchWithReauth.js"],"sourcesContent":["import { fetchBaseQuery } from \"@reduxjs/toolkit/dist/query\";\nimport { getToken } from \"./authApi\";\n\n\nconst url = `https://${process.env.REACT_APP_GRAPH_ENDPOINT}/${process.env.REACT_APP_GRAPH_VERSION}/`;\n\n\nconst baseQuery = (token) =>\n  fetchBaseQuery({\n    baseUrl: url,\n    prepareHeaders: (headers) => {\n      headers.set(\"authorization\", `bearer ${token}`);\n      return headers;\n    },\n  });\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const result = getToken.select()(a)\n  const token = null;\n  console.log(token);\n  const { data, error } = await baseQuery(token)(args, api, extra);\n\n  if (error && error.status === 401) {\n    const { isSuccess, data } = await api.dispatch(getToken.initiate());\n\n    if (isSuccess) {\n      const result = await baseQuery(data)(args, api, extra);\n      return result;\n    }\n  } else {\n    return data;\n  }\n};\n\nexport default baseQueryWithReauth;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,6BAA/B;AACA,SAASC,QAAT,QAAyB,WAAzB;AAGA,MAAMC,GAAG,GAAI,WAAUC,OAAO,CAACC,GAAR,CAAYC,wBAAyB,IAAGF,OAAO,CAACC,GAAR,CAAYE,uBAAwB,GAAnG;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAChBR,cAAc,CAAC;EACbS,OAAO,EAAEP,GADI;EAEbQ,cAAc,EAAGC,OAAD,IAAa;IAC3BA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA8B,UAASJ,KAAM,EAA7C;IACA,OAAOG,OAAP;EACD;AALY,CAAD,CADhB;;AASA,MAAME,mBAAmB,GAAG,OAAOC,IAAP,EAAaC,GAAb,EAAkBC,KAAlB,KAA4B;EACtD,MAAMC,MAAM,GAAGhB,QAAQ,CAACiB,MAAT,GAAkBC,CAAlB,CAAf;EACA,MAAMX,KAAK,GAAG,IAAd;EACAY,OAAO,CAACC,GAAR,CAAYb,KAAZ;EACA,MAAM;IAAEc,IAAF;IAAQC;EAAR,IAAkB,MAAMhB,SAAS,CAACC,KAAD,CAAT,CAAiBM,IAAjB,EAAuBC,GAAvB,EAA4BC,KAA5B,CAA9B;;EAEA,IAAIO,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,GAA9B,EAAmC;IACjC,MAAM;MAAEC,SAAF;MAAaH;IAAb,IAAsB,MAAMP,GAAG,CAACW,QAAJ,CAAazB,QAAQ,CAAC0B,QAAT,EAAb,CAAlC;;IAEA,IAAIF,SAAJ,EAAe;MACb,MAAMR,MAAM,GAAG,MAAMV,SAAS,CAACe,IAAD,CAAT,CAAgBR,IAAhB,EAAsBC,GAAtB,EAA2BC,KAA3B,CAArB;MACA,OAAOC,MAAP;IACD;EACF,CAPD,MAOO;IACL,OAAOK,IAAP;EACD;AACF,CAhBD;;AAkBA,eAAeT,mBAAf"},"metadata":{},"sourceType":"module"}