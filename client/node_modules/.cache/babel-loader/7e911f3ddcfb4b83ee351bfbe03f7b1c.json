{"ast":null,"code":"import { fetchBaseQuery } from \"@reduxjs/toolkit/dist/query\";\nimport { getToken } from \"./authApi\";\nconst url = \"https://graph.microsoft.com/v1.0/\";\nconst baseQuery = fetchBaseQuery({\n  baseUrl: url\n});\n\nconst basewWithHeaders = token => fetchBaseQuery({\n  baseUrl: url,\n  prepareHeaders: headers => {\n    headers.set(\"authorization\", `bearer ${token}`);\n    return headers;\n  }\n});\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const {\n    error\n  } = await baseQuery(args, api, extra);\n\n  if (error && error.status === 401) {\n    const {\n      isSuccess,\n      data\n    } = await api.dispatch(authApi.endpoints.getToken.initiate());\n\n    if (isSuccess) {\n      const result = await basewWithHeaders(data)(args, api, extra);\n      return result;\n    }\n  }\n};\n\nexport default baseQueryWithReauth;","map":{"version":3,"names":["fetchBaseQuery","getToken","url","baseQuery","baseUrl","basewWithHeaders","token","prepareHeaders","headers","set","baseQueryWithReauth","args","api","extra","error","status","isSuccess","data","dispatch","authApi","endpoints","initiate","result"],"sources":["/Users/shahartamari/code/ad-org-tree/client/src/services/fetchWithReauth.js"],"sourcesContent":["import { fetchBaseQuery } from \"@reduxjs/toolkit/dist/query\";\n\nimport {getToken} from \"./authApi\";\n\nconst url = \"https://graph.microsoft.com/v1.0/\";\nconst baseQuery = fetchBaseQuery({\n  baseUrl: url,\n});\n\nconst basewWithHeaders = (token) =>\n  fetchBaseQuery({\n    baseUrl: url,\n    prepareHeaders: (headers) => {\n      headers.set(\"authorization\", `bearer ${token}`);\n      return headers;\n    },\n  });\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const { error } = await baseQuery(args, api, extra);\n\n  if (error && error.status === 401) {\n    const { isSuccess, data } = await api.dispatch(\n      authApi.endpoints.getToken.initiate()\n    );\n\n    if (isSuccess) {\n      const result = await basewWithHeaders(data)(args, api, extra);\n      return result;\n    }\n  }\n};\n\nexport default baseQueryWithReauth;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,6BAA/B;AAEA,SAAQC,QAAR,QAAuB,WAAvB;AAEA,MAAMC,GAAG,GAAG,mCAAZ;AACA,MAAMC,SAAS,GAAGH,cAAc,CAAC;EAC/BI,OAAO,EAAEF;AADsB,CAAD,CAAhC;;AAIA,MAAMG,gBAAgB,GAAIC,KAAD,IACvBN,cAAc,CAAC;EACbI,OAAO,EAAEF,GADI;EAEbK,cAAc,EAAGC,OAAD,IAAa;IAC3BA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA8B,UAASH,KAAM,EAA7C;IACA,OAAOE,OAAP;EACD;AALY,CAAD,CADhB;;AASA,MAAME,mBAAmB,GAAG,OAAOC,IAAP,EAAaC,GAAb,EAAkBC,KAAlB,KAA4B;EACtD,MAAM;IAAEC;EAAF,IAAY,MAAMX,SAAS,CAACQ,IAAD,EAAOC,GAAP,EAAYC,KAAZ,CAAjC;;EAEA,IAAIC,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,GAA9B,EAAmC;IACjC,MAAM;MAAEC,SAAF;MAAaC;IAAb,IAAsB,MAAML,GAAG,CAACM,QAAJ,CAChCC,OAAO,CAACC,SAAR,CAAkBnB,QAAlB,CAA2BoB,QAA3B,EADgC,CAAlC;;IAIA,IAAIL,SAAJ,EAAe;MACb,MAAMM,MAAM,GAAG,MAAMjB,gBAAgB,CAACY,IAAD,CAAhB,CAAuBN,IAAvB,EAA6BC,GAA7B,EAAkCC,KAAlC,CAArB;MACA,OAAOS,MAAP;IACD;EACF;AACF,CAbD;;AAeA,eAAeZ,mBAAf"},"metadata":{},"sourceType":"module"}