{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst GRAPH_TYPE = \"GRAPH\";\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://graph.microsoft.com/beta/\"\n  }),\n  prepareHeaders: (headers, _ref) => {\n    let {\n      getState\n    } = _ref;\n    const token = getState().auth.getToken();\n    console.log(token);\n\n    if (token) {\n      headers.set('authorization', `Bearer ${token}`);\n    }\n\n    return headers;\n  },\n  tagTypes: [GRAPH_TYPE],\n  endpoints: builder => ({\n    getUser: builder.query({\n      query: id => `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, errir, id) => [{\n        type: GRAPH_TYPE,\n        id\n      }]\n    })\n  })\n});\nexport default graphApi;\nexport const {\n  useGetUserQuery\n} = graphApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","GRAPH_TYPE","graphApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","getState","token","auth","getToken","console","log","set","tagTypes","endpoints","builder","getUser","query","id","providesTags","result","errir","type","useGetUserQuery"],"sources":["/Users/shahartamari/code/ad-org-tree/client/src/services/graphApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst GRAPH_TYPE = \"GRAPH\";\n\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"https://graph.microsoft.com/beta/\" }),\n  prepareHeaders: (headers, {getState}) => {\n    const token = getState().auth.getToken();\n    console.log(token)\n    if (token) {\n      headers.set('authorization', `Bearer ${token}`)\n    }\n\n    return headers\n\n  },\n  tagTypes: [GRAPH_TYPE],\n  endpoints: (builder) => ({\n    getUser: builder.query({\n      query: (id) =>\n        `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, errir, id) => [{ type: GRAPH_TYPE, id }],\n    }),\n  }),\n});\n\nexport default graphApi;\nexport const { useGetUserQuery } = graphApi;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AACA,MAAMC,UAAU,GAAG,OAAnB;AAEA,MAAMC,QAAQ,GAAGH,SAAS,CAAC;EACzBI,WAAW,EAAE,SADY;EAEzBC,SAAS,EAAEJ,cAAc,CAAC;IAAEK,OAAO,EAAE;EAAX,CAAD,CAFA;EAGzBC,cAAc,EAAE,CAACC,OAAD,WAAyB;IAAA,IAAf;MAACC;IAAD,CAAe;IACvC,MAAMC,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBC,QAAhB,EAAd;IACAC,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;IACA,IAAIA,KAAJ,EAAW;MACTF,OAAO,CAACO,GAAR,CAAY,eAAZ,EAA8B,UAASL,KAAM,EAA7C;IACD;;IAED,OAAOF,OAAP;EAED,CAZwB;EAazBQ,QAAQ,EAAE,CAACd,UAAD,CAbe;EAczBe,SAAS,EAAGC,OAAD,KAAc;IACvBC,OAAO,EAAED,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAGC,EAAD,IACJ,SAAQA,EAAG,2DAFO;MAGrBC,YAAY,EAAE,CAACC,MAAD,EAASC,KAAT,EAAgBH,EAAhB,KAAuB,CAAC;QAAEI,IAAI,EAAEvB,UAAR;QAAoBmB;MAApB,CAAD;IAHhB,CAAd;EADc,CAAd;AAdc,CAAD,CAA1B;AAuBA,eAAelB,QAAf;AACA,OAAO,MAAM;EAAEuB;AAAF,IAAsBvB,QAA5B"},"metadata":{},"sourceType":"module"}