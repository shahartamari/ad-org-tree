{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport authApi from \"./authApi\";\nconst GRAPH_TYPE = \"GRAPH\";\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://graph.microsoft.com/beta/\",\n    prepareHeaders: (headers, _ref) => {\n      let {\n        getState\n      } = _ref;\n      // const token = authApi.endpoints.getToken.select()(getState());\n      //  console.log(token);\n      //if (token) {\n      // headers.set(\"authorization\", `Bearer ${token}`);\n      // }\n      return headers;\n    }\n  }),\n  tagTypes: [GRAPH_TYPE],\n  endpoints: builder => ({\n    info: builder.query({\n      query: () => '/',\n\n      async onQueryStarted(undefined, _ref2) {\n        let {\n          dispatch,\n          getState\n        } = _ref2;\n        await dispatch(authApi.endpoints.getToken.initiate()(dispatch, getState));\n      }\n\n    }),\n    getUsers: builder.query({\n      query: () => \"users\"\n    }),\n    getUser: builder.query({\n      query: id => `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, errir, id) => [{\n        type: GRAPH_TYPE,\n        id\n      }]\n    })\n  })\n});\nexport default graphApi;\nexport const {\n  useGetUserQuery,\n  useGetUsersQuery,\n  useInfoQuery\n} = graphApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","GRAPH_TYPE","graphApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","getState","tagTypes","endpoints","builder","info","query","onQueryStarted","undefined","dispatch","getToken","initiate","getUsers","getUser","id","providesTags","result","errir","type","useGetUserQuery","useGetUsersQuery","useInfoQuery"],"sources":["/Users/shahartamari/code/ad-org-tree/client/src/services/graphApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport authApi from \"./authApi\";\n\nconst GRAPH_TYPE = \"GRAPH\";\n\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://graph.microsoft.com/beta/\",\n    prepareHeaders: (headers, { getState }) => {\n      \n    // const token = authApi.endpoints.getToken.select()(getState());\n   //  console.log(token);\n      //if (token) {\n       // headers.set(\"authorization\", `Bearer ${token}`);\n     // }\n\n      return headers;\n    },\n  }),\n  tagTypes: [GRAPH_TYPE],\n  endpoints: (builder) => ({\n    info: builder.query ({\n      query: ()=> '/',\n      async onQueryStarted(undefined, {dispatch, getState}) {\n        await dispatch(authApi.endpoints.getToken.initiate()(dispatch, getState))\n        \n      }\n    }),\n    getUsers: builder.query({\n      query: () => \"users\",\n    }),\n    getUser: builder.query({\n      query: (id) =>\n        `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, errir, id) => [{ type: GRAPH_TYPE, id }],\n    }),\n  }),\n});\n\nexport default graphApi;\nexport const { useGetUserQuery, useGetUsersQuery, useInfoQuery } = graphApi;\n\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,UAAU,GAAG,OAAnB;AAEA,MAAMC,QAAQ,GAAGJ,SAAS,CAAC;EACzBK,WAAW,EAAE,SADY;EAEzBC,SAAS,EAAEL,cAAc,CAAC;IACxBM,OAAO,EAAE,mCADe;IAExBC,cAAc,EAAE,CAACC,OAAD,WAA2B;MAAA,IAAjB;QAAEC;MAAF,CAAiB;MAE3C;MACD;MACG;MACC;MACF;MAEC,OAAOD,OAAP;IACD;EAXuB,CAAD,CAFA;EAezBE,QAAQ,EAAE,CAACR,UAAD,CAfe;EAgBzBS,SAAS,EAAGC,OAAD,KAAc;IACvBC,IAAI,EAAED,OAAO,CAACE,KAAR,CAAe;MACnBA,KAAK,EAAE,MAAK,GADO;;MAEnB,MAAMC,cAAN,CAAqBC,SAArB,SAAsD;QAAA,IAAtB;UAACC,QAAD;UAAWR;QAAX,CAAsB;QACpD,MAAMQ,QAAQ,CAAChB,OAAO,CAACU,SAAR,CAAkBO,QAAlB,CAA2BC,QAA3B,GAAsCF,QAAtC,EAAgDR,QAAhD,CAAD,CAAd;MAED;;IALkB,CAAf,CADiB;IAQvBW,QAAQ,EAAER,OAAO,CAACE,KAAR,CAAc;MACtBA,KAAK,EAAE,MAAM;IADS,CAAd,CARa;IAWvBO,OAAO,EAAET,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAGQ,EAAD,IACJ,SAAQA,EAAG,2DAFO;MAGrBC,YAAY,EAAE,CAACC,MAAD,EAASC,KAAT,EAAgBH,EAAhB,KAAuB,CAAC;QAAEI,IAAI,EAAExB,UAAR;QAAoBoB;MAApB,CAAD;IAHhB,CAAd;EAXc,CAAd;AAhBc,CAAD,CAA1B;AAmCA,eAAenB,QAAf;AACA,OAAO,MAAM;EAAEwB,eAAF;EAAmBC,gBAAnB;EAAqCC;AAArC,IAAsD1B,QAA5D"},"metadata":{},"sourceType":"module"}