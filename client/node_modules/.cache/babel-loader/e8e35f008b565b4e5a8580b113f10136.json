{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport authApi from \"./authApi\";\nconst GRAPH_TYPE = \"GRAPH\";\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://graph.microsoft.com/beta/\",\n    prepareHeaders: (headers, _ref) => {\n      let {\n        getState\n      } = _ref;\n      console.log(authApi.endpoints.getToken.select()(getState())); //if (token) {\n      // headers.set(\"authorization\", `Bearer ${token}`);\n      // }\n\n      return headers;\n    }\n  }),\n  tagTypes: [GRAPH_TYPE],\n  endpoints: builder => ({\n    base: builder.query({\n      query: () => '/',\n\n      async onQueryStarted(undefined, _ref2) {\n        let {\n          dispatch,\n          getState\n        } = _ref2;\n        dispatch(authApi.endpoints.getToken);\n      }\n\n    }),\n    getUsers: builder.query({\n      query: () => \"users\"\n    }),\n    getUser: builder.query({\n      query: id => `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, errir, id) => [{\n        type: GRAPH_TYPE,\n        id\n      }]\n    })\n  })\n});\nexport default graphApi;\nexport const {\n  useGetUserQuery,\n  useGetUsersQuery\n} = graphApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","GRAPH_TYPE","graphApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","getState","console","log","endpoints","getToken","select","tagTypes","builder","base","query","onQueryStarted","undefined","dispatch","getUsers","getUser","id","providesTags","result","errir","type","useGetUserQuery","useGetUsersQuery"],"sources":["/Users/shahartamari/code/ad-org-tree/client/src/services/graphApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport authApi from \"./authApi\";\n\nconst GRAPH_TYPE = \"GRAPH\";\n\nconst graphApi = createApi({\n  reducerPath: \"MgGraph\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://graph.microsoft.com/beta/\",\n    prepareHeaders: (headers, { getState }) => {\n      \n   console.log(authApi.endpoints.getToken.select()(getState()));\n    \n      //if (token) {\n       // headers.set(\"authorization\", `Bearer ${token}`);\n     // }\n\n      return headers;\n    },\n  }),\n  tagTypes: [GRAPH_TYPE],\n  endpoints: (builder) => ({\n    base: builder.query ({\n      query: ()=> '/',\n      async onQueryStarted(undefined, {dispatch, getState}) {\n        dispatch(authApi.endpoints.getToken)\n      }\n    }),\n    getUsers: builder.query({\n      query: () => \"users\",\n    }),\n    getUser: builder.query({\n      query: (id) =>\n        `users/${id}$select=displayName,jobTitle,department,userPrinicpalName`,\n      providesTags: (result, errir, id) => [{ type: GRAPH_TYPE, id }],\n    }),\n  }),\n});\n\nexport default graphApi;\nexport const { useGetUserQuery, useGetUsersQuery } = graphApi;\n\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,UAAU,GAAG,OAAnB;AAEA,MAAMC,QAAQ,GAAGJ,SAAS,CAAC;EACzBK,WAAW,EAAE,SADY;EAEzBC,SAAS,EAAEL,cAAc,CAAC;IACxBM,OAAO,EAAE,mCADe;IAExBC,cAAc,EAAE,CAACC,OAAD,WAA2B;MAAA,IAAjB;QAAEC;MAAF,CAAiB;MAE5CC,OAAO,CAACC,GAAR,CAAYV,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2BC,MAA3B,GAAoCL,QAAQ,EAA5C,CAAZ,EAF4C,CAIzC;MACC;MACF;;MAEC,OAAOD,OAAP;IACD;EAXuB,CAAD,CAFA;EAezBO,QAAQ,EAAE,CAACb,UAAD,CAfe;EAgBzBU,SAAS,EAAGI,OAAD,KAAc;IACvBC,IAAI,EAAED,OAAO,CAACE,KAAR,CAAe;MACnBA,KAAK,EAAE,MAAK,GADO;;MAEnB,MAAMC,cAAN,CAAqBC,SAArB,SAAsD;QAAA,IAAtB;UAACC,QAAD;UAAWZ;QAAX,CAAsB;QACpDY,QAAQ,CAACpB,OAAO,CAACW,SAAR,CAAkBC,QAAnB,CAAR;MACD;;IAJkB,CAAf,CADiB;IAOvBS,QAAQ,EAAEN,OAAO,CAACE,KAAR,CAAc;MACtBA,KAAK,EAAE,MAAM;IADS,CAAd,CAPa;IAUvBK,OAAO,EAAEP,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAGM,EAAD,IACJ,SAAQA,EAAG,2DAFO;MAGrBC,YAAY,EAAE,CAACC,MAAD,EAASC,KAAT,EAAgBH,EAAhB,KAAuB,CAAC;QAAEI,IAAI,EAAE1B,UAAR;QAAoBsB;MAApB,CAAD;IAHhB,CAAd;EAVc,CAAd;AAhBc,CAAD,CAA1B;AAkCA,eAAerB,QAAf;AACA,OAAO,MAAM;EAAE0B,eAAF;EAAmBC;AAAnB,IAAwC3B,QAA9C"},"metadata":{},"sourceType":"module"}