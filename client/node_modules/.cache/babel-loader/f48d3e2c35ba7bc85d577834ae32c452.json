{"ast":null,"code":"import { fetchBaseQuery } from \"@reduxjs/toolkit/dist/query\";\nimport { getToken } from \"./authApi\";\nconst url = `https://${process.env.REACT_APP_GRAPH_ENDPOINT}/${process.env.REACT_APP_GRAPH_VERSION}/`;\nconst baseQuery = fetchBaseQuery({\n  baseUrl: url\n});\n\nconst basewWithHeaders = token => fetchBaseQuery({\n  baseUrl: url,\n  prepareHeaders: headers => {\n    headers.set(\"authorization\", `bearer ${token}`);\n    return headers;\n  }\n});\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const token = api.dispatch(getToken.select());\n  const {\n    error\n  } = await baseQuery(args, api, extra);\n\n  if (error && error.status === 401) {\n    const {\n      isSuccess,\n      data\n    } = await api.dispatch(getToken.initiate());\n\n    if (isSuccess) {\n      const result = await basewWithHeaders(data)(args, api, extra);\n      return result;\n    }\n  }\n};\n\nexport default baseQueryWithReauth;","map":{"version":3,"names":["fetchBaseQuery","getToken","url","process","env","REACT_APP_GRAPH_ENDPOINT","REACT_APP_GRAPH_VERSION","baseQuery","baseUrl","basewWithHeaders","token","prepareHeaders","headers","set","baseQueryWithReauth","args","api","extra","dispatch","select","error","status","isSuccess","data","initiate","result"],"sources":["/Users/shahartamari/code/ad-org-tree/client/src/services/fetchWithReauth.js"],"sourcesContent":["import { fetchBaseQuery } from \"@reduxjs/toolkit/dist/query\";\nimport { getToken } from \"./authApi\";\n\n\nconst url = `https://${process.env.REACT_APP_GRAPH_ENDPOINT}/${process.env.REACT_APP_GRAPH_VERSION}/`;\nconst baseQuery = fetchBaseQuery({\n  baseUrl: url,\n});\n\nconst basewWithHeaders = (token) =>\n  fetchBaseQuery({\n    baseUrl: url,\n    prepareHeaders: (headers) => {\n      headers.set(\"authorization\", `bearer ${token}`);\n      return headers;\n    },\n  });\n\nconst baseQueryWithReauth = async (args, api, extra) => {\n  const token = api.dispatch(getToken.select());\n  const { error } = await baseQuery(args, api, extra);\n\n  if (error && error.status === 401) {\n    const { isSuccess, data } = await api.dispatch(getToken.initiate());\n\n    if (isSuccess) {\n      const result = await basewWithHeaders(data)(args, api, extra);\n      return result;\n    }\n  }\n};\n\nexport default baseQueryWithReauth;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,6BAA/B;AACA,SAASC,QAAT,QAAyB,WAAzB;AAGA,MAAMC,GAAG,GAAI,WAAUC,OAAO,CAACC,GAAR,CAAYC,wBAAyB,IAAGF,OAAO,CAACC,GAAR,CAAYE,uBAAwB,GAAnG;AACA,MAAMC,SAAS,GAAGP,cAAc,CAAC;EAC/BQ,OAAO,EAAEN;AADsB,CAAD,CAAhC;;AAIA,MAAMO,gBAAgB,GAAIC,KAAD,IACvBV,cAAc,CAAC;EACbQ,OAAO,EAAEN,GADI;EAEbS,cAAc,EAAGC,OAAD,IAAa;IAC3BA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA8B,UAASH,KAAM,EAA7C;IACA,OAAOE,OAAP;EACD;AALY,CAAD,CADhB;;AASA,MAAME,mBAAmB,GAAG,OAAOC,IAAP,EAAaC,GAAb,EAAkBC,KAAlB,KAA4B;EACtD,MAAMP,KAAK,GAAGM,GAAG,CAACE,QAAJ,CAAajB,QAAQ,CAACkB,MAAT,EAAb,CAAd;EACA,MAAM;IAAEC;EAAF,IAAY,MAAMb,SAAS,CAACQ,IAAD,EAAOC,GAAP,EAAYC,KAAZ,CAAjC;;EAEA,IAAIG,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,GAA9B,EAAmC;IACjC,MAAM;MAAEC,SAAF;MAAaC;IAAb,IAAsB,MAAMP,GAAG,CAACE,QAAJ,CAAajB,QAAQ,CAACuB,QAAT,EAAb,CAAlC;;IAEA,IAAIF,SAAJ,EAAe;MACb,MAAMG,MAAM,GAAG,MAAMhB,gBAAgB,CAACc,IAAD,CAAhB,CAAuBR,IAAvB,EAA6BC,GAA7B,EAAkCC,KAAlC,CAArB;MACA,OAAOQ,MAAP;IACD;EACF;AACF,CAZD;;AAcA,eAAeX,mBAAf"},"metadata":{},"sourceType":"module"}